/*
 * Title
 *
 * Title
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package mzserver

import (
	"context"
	"net/http"
	"os"
)

// DefaultApiRouter defines the required methods for binding the api requests to a responses for the DefaultApi
// The DefaultApiRouter implementation should parse necessary information from the http request,
// pass the data to a DefaultApiServicer to perform the required actions, then write the service results to the http response.
type DefaultApiRouter interface {
	Get3dMap(http.ResponseWriter, *http.Request)
	GetChromatogramCount(http.ResponseWriter, *http.Request)
	GetChromatogramData(http.ResponseWriter, *http.Request)
	GetChromatogramHeader(http.ResponseWriter, *http.Request)
	GetChromatograms(http.ResponseWriter, *http.Request)
	GetFileName(http.ResponseWriter, *http.Request)
	GetInstrumentAnalyzer(http.ResponseWriter, *http.Request)
	GetInstrumentData(http.ResponseWriter, *http.Request)
	GetInstrumentDetector(http.ResponseWriter, *http.Request)
	GetInstrumentManufacturer(http.ResponseWriter, *http.Request)
	GetInstrumentModel(http.ResponseWriter, *http.Request)
	GetIonisationMethod(http.ResponseWriter, *http.Request)
	GetIsolationWindows(http.ResponseWriter, *http.Request)
	GetSampleData(http.ResponseWriter, *http.Request)
	GetScanCount(http.ResponseWriter, *http.Request)
	GetScanHeader(http.ResponseWriter, *http.Request)
	GetScanPeakCount(http.ResponseWriter, *http.Request)
	GetScanPeaks(http.ResponseWriter, *http.Request)
	GetScansData(http.ResponseWriter, *http.Request)
	GetSoftware(http.ResponseWriter, *http.Request)
	GetSource(http.ResponseWriter, *http.Request)
	PostFile(http.ResponseWriter, *http.Request)
}

// DefaultApiServicer defines the api actions for the DefaultApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DefaultApiServicer interface {
	Get3dMap(context.Context, string) (ImplResponse, error)
	GetChromatogramCount(context.Context, string) (ImplResponse, error)
	GetChromatogramData(context.Context, string, int64) (ImplResponse, error)
	GetChromatogramHeader(context.Context, string, int64) (ImplResponse, error)
	GetChromatograms(context.Context, string) (ImplResponse, error)
	GetFileName(context.Context, string) (ImplResponse, error)
	GetInstrumentAnalyzer(context.Context, string) (ImplResponse, error)
	GetInstrumentData(context.Context, string) (ImplResponse, error)
	GetInstrumentDetector(context.Context, string) (ImplResponse, error)
	GetInstrumentManufacturer(context.Context, string) (ImplResponse, error)
	GetInstrumentModel(context.Context, string) (ImplResponse, error)
	GetIonisationMethod(context.Context, string) (ImplResponse, error)
	GetIsolationWindows(context.Context, string) (ImplResponse, error)
	GetSampleData(context.Context, string) (ImplResponse, error)
	GetScanCount(context.Context, string) (ImplResponse, error)
	GetScanHeader(context.Context, string) (ImplResponse, error)
	GetScanPeakCount(context.Context, string) (ImplResponse, error)
	GetScanPeaks(context.Context, string) (ImplResponse, error)
	GetScansData(context.Context, string) (ImplResponse, error)
	GetSoftware(context.Context, string) (ImplResponse, error)
	GetSource(context.Context, string) (ImplResponse, error)
	PostFile(context.Context, string, *os.File) (ImplResponse, error)
}
